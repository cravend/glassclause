datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

/**
 * ===== Enums =====
 */

// User-facing status of a contract.
enum ContractStatus {
    Processing
    Safe
    Caution
    Escalate
    Failed
}

// Internal job state for the background analysis worker.
enum AnalysisStatus {
    Queued
    Running
    Succeeded
    Failed
}

// Risk level of a clause.
enum RiskLevel {
    Safe
    Caution
    Escalate
}

// Types of flags.
enum FlagType {
    Indemnity
    NonSolicitation
    GoverningLaw
    LiquidatedDamages
    Other
}

/**
 * ===== Models =====
 */

model Contract {
    id        String   @id @default(cuid())
    rawText   String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    status ContractStatus @default(Processing)

    analysisStatus AnalysisStatus @default(Queued)
    analysisError  String?

    flaggedClauses FlaggedClause[]
}

model FlaggedClause {
    id         String   @id @default(cuid())
    contractId String
    contract   Contract @relation(fields: [contractId], references: [id], onDelete: Cascade)

    type    FlagType
    risk    RiskLevel @default(Escalate)
    snippet String
    start   Int
    end     Int

    createdAt DateTime @default(now())
}
